plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.15'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'org.unbroken-dome.xjc' version '2.0.0'
	id 'com.diffplug.spotless' version '6.19.0'
	id 'org.ysb33r.doxygen' version '0.7.0'
	// id "org.sonarqube" version "3.4.0.2513"
	// id "org.sonarqube" version "4.2.0.3129"
	id 'jacoco'
	id 'project-report'
	id 'build-dashboard'
}

group = 'net.ljcomputing'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
	withJavadocJar()
	withSourcesJar()
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenLocal()

	maven {
		url = uri('http://localhost:8081/repository/maven-central/')
		allowInsecureProtocol = true
	}

	// mavenCentral()
}

dependencies {
	xjcClasspath 'org.jvnet.jaxb2_commons:jaxb2-basics:0.12.0'

	implementation 'info.picocli:picocli-spring-boot-starter:4.7.4'

	implementation 'org.jvnet.jaxb2_commons:jaxb2-basics-runtime:0.12.0'
	implementation 'com.sun.xml.bind:jaxb-core:4.0.2'
	implementation 'javax.xml.bind:jaxb-api:2.3.1'
	implementation 'com.sun.xml.bind:jaxb-impl:2.3.8'

	implementation 'org.springframework:spring-oxm'

	implementation 'io.github.threeten-jaxb:threeten-jaxb-core:1.2'

	implementation 'org.apache.spark:spark-core_2.13:3.4.0'
	implementation 'org.apache.spark:spark-unsafe_2.13:3.4.0'
	implementation 'org.apache.spark:spark-sql_2.13:3.4.0'
	implementation 'org.apache.spark:spark-avro_2.13:3.4.0'
	implementation 'com.databricks:spark-xml_2.13:0.17.0'


	compileOnly 'org.projectlombok:lombok'

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

xjc {
	srcDirName = '.'
}

sourceSets {
	main {
		xjcTargetPackage = 'net.ljcomputing.jxosm.jaxb'
		xjcExtraArgs.addAll '-Xequals', '-XhashCode', '-XtoString', '-extension'
	}
}

tasks.withType(JavaCompile) {
	dependsOn spotlessApply
	options.encoding = 'UTF-8'
}

bootRun {
	classpath = sourceSets.main.runtimeClasspath
}

jar {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE

	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}

	manifest {
		attributes (
				'Main-Class': 'net.ljcomputing.jxosm.JxosmApplication',
				'Implementation-Title': 'Java XML OpendStreetMaps',
				'Implementation-Version': version
				)
	}
}

spotless {
	java {
		targetExclude("build/**")
		licenseHeaderFile("$rootProject.projectDir/configuration/spotless/license-header.java").updateYearWithLatest(true)
		toggleOffOn()
		trimTrailingWhitespace()
		endWithNewline()
		removeUnusedImports()
		importOrder('java', 'javax', '', '\\#')
		googleJavaFormat('1.15.0').aosp().reflowLongStrings().groupArtifact('com.google.googlejavaformat:google-java-format')
	}
	groovyGradle {
		target '*.gradle'
		greclipse()
	}
}

javadoc {
	exclude("build/generated/sources/**/*.java")
	options.memberLevel = JavadocMemberLevel.PRIVATE
	failOnError(false)
}

doxygen {
	source new File(projectDir, 'src/main/java')
	project_name 'Java XML OpendStreetMaps'
	optimize_output_java true
	javadoc_autobrief true
	extract_private true
	extract_static true
	generate_rtf true
	generate_latex true
	generate_html true
	generate_treeview true
	treeview_width 100
}

test {
	testLogging.showStandardStreams = true
	finalizedBy jacocoTestReport
	useJUnitPlatform()

	jacoco {
		excludes = ['**$Handler']
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 1.0
			}
		}
	}
}

// sonarqube {
//     properties {
// 	property "sonar.projectKey", "net.ljcomputing.conduit"
// 	property "sonar.host.url", "http://localhost:9005"
// 	property "sonar.login", "sqp_0ae93b405c1168104bfff825883bb7e251d5cdeb"
// 	property 'sonar.verbose', 'true'
// 	property 'sonar.sourceEncoding', 'UTF-8'
//         property 'sonar.exclusions', 'build/generated-src/**'
//   }
// }

// sonarqube {
//   properties {
//     property "sonar.projectKey", "willmorejg_conduit"
//     property "sonar.organization", "willmorejg"
//     property "sonar.host.url", "https://sonarcloud.io"
//     property 'sonar.verbose', 'true'
//     property 'sonar.sourceEncoding', 'UTF-8'
//   }
// }
